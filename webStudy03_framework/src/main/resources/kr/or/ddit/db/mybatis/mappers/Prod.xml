<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.IProdDAO">
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<collection property="memberList" ofType="MemberVO" autoMapping="true"/>
	</resultMap>
	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH CARTVIEW AS (
		    SELECT DISTINCT CART_MEMBER, CART_PROD
		            , MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL
		    FROM CART INNER JOIN MEMBER ON(CART_MEMBER = MEM_ID)
		), PRODVIEW AS(
			SELECT
			    PROD_ID,    PROD_NAME,    PROD_LGU,    PROD_BUYER,
			    PROD_COST,    PROD_PRICE,    PROD_SALE,    PROD_OUTLINE,
			    PROD_DETAIL,    PROD_IMG,    PROD_TOTALSTOCK,    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD'),
			    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY,
			    PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE,    PROD_MILEAGE
			    , LPROD_NM
			    , BUYER_ID, BUYER_NAME, BUYER_CHARGER, BUYER_ADD1
			FROM    PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
					INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		)
		SELECT PRODVIEW.*
			, MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL
		FROM PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prod_id}
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey resultType="string" order="BEFORE" keyProperty="prod_id"> 
			SELECT #{prod_lgu}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0)+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prod_lgu}
		</selectKey>
		INSERT INTO prod (
		    prod_id,    prod_name,    prod_lgu,    prod_buyer,
		    prod_cost,    prod_price,    prod_sale,    prod_outline,
		    prod_detail,    prod_img,    prod_totalstock,    prod_insdate,
		    prod_properstock,    prod_size,    prod_color,    prod_delivery,
		    prod_unit,    prod_qtyin,    prod_qtysale,    prod_mileage
		) VALUES (
		    #{prod_id,jdbcType=VARCHAR},    #{prod_name,jdbcType=VARCHAR},    
		    #{prod_lgu,jdbcType=VARCHAR},    #{prod_buyer,jdbcType=VARCHAR},
		    #{prod_cost,jdbcType=NUMERIC},    #{prod_price,jdbcType=NUMERIC},    
		    #{prod_sale,jdbcType=NUMERIC},    #{prod_outline,jdbcType=VARCHAR},
		    #{prod_detail,jdbcType=VARCHAR},    #{prod_img,jdbcType=VARCHAR},    
		    #{prod_totalstock,jdbcType=NUMERIC},    SYSDATE,
		    #{prod_properstock,jdbcType=NUMERIC},    #{prod_size,jdbcType=VARCHAR},    
		    #{prod_color,jdbcType=VARCHAR},    #{prod_delivery,jdbcType=VARCHAR},
		    #{prod_unit,jdbcType=VARCHAR},    #{prod_qtyin,jdbcType=NUMERIC},    
		    #{prod_qtysale,jdbcType=NUMERIC},  #{prod_mileage,jdbcType=NUMERIC}
		)
	</insert>
	<sql id="searchFrag">
		<trim prefix=" WHERE " prefixOverrides="AND">
			<if test="searchDetail neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_name)">
				AND	PROD_NAME LIKE '%'||#{searchDetail.prod_name}||'%'
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_lgu)">
				AND	PROD_LGU =#{searchDetail.prod_lgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_buyer)">
				AND	PROD_BUYER =#{searchDetail.prod_buyer}
				</if>
			</if>
		</trim>	
	</sql>
	<select id="selectProdCount" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
						INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		<include refid="searchFrag" />
	</select>
	<select id="selectProdList" parameterType="PagingVO" resultType="ProdVO">
		WITH PRODROWID AS (
			SELECT ROWID RD
				, PROD_ID, PROD_NAME, PROD_LGU, PROD_BUYER
				, PROD_COST, PROD_PRICE, PROD_SALE
			FROM PROD		
		)
		SELECT B.*, BUYER_NAME "buyer.buyer_name"
		FROM (
			SELECT A.*, ROWNUM RNUM 
			FROM (
				SELECT PRODROWID.*					
					, LPROD_NM
					, BUYER_NAME 
				FROM PRODROWID INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
							INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
				<include refid="searchFrag" />
				ORDER BY RD DESC
			)	A		
		) B
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}			
	</select>
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		    SET
		    PROD_NAME			=	#{prod_name,jdbcType=VARCHAR},
		    PROD_COST			=	#{prod_cost,jdbcType=NUMERIC},
		    PROD_PRICE			=	#{prod_price,jdbcType=NUMERIC},
		    PROD_SALE			=	#{prod_sale,jdbcType=NUMERIC},
		    PROD_OUTLINE		=	#{prod_outline,jdbcType=VARCHAR},
		    PROD_DETAIL			=	#{prod_detail,jdbcType=CLOB},
		    PROD_TOTALSTOCK		=	#{prod_totalstock,jdbcType=NUMERIC},
		    PROD_PROPERSTOCK	=	#{prod_properstock,jdbcType=NUMERIC},
		    PROD_SIZE			=	#{prod_size,jdbcType=VARCHAR},
		    PROD_COLOR			=	#{prod_color,jdbcType=VARCHAR},
		    PROD_DELIVERY		=	#{prod_delivery,jdbcType=VARCHAR},
		    PROD_UNIT			=	#{prod_unit,jdbcType=VARCHAR},
		    PROD_QTYIN			=	#{prod_qtyin,jdbcType=NUMERIC},
		    PROD_QTYSALE		=	#{prod_qtysale,jdbcType=NUMERIC},
		    PROD_MILEAGE		=	#{prod_mileage,jdbcType=NUMERIC}
		    <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(prod_img)">
		    	, PROD_IMG	=	#{prod_img,jdbcType=VARCHAR}
		    </if>
		WHERE    PROD_ID =		#{prod_id,jdbcType=VARCHAR}
	</update>
</mapper>









