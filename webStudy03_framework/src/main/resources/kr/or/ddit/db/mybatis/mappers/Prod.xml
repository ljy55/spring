<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.IProdDAO">
	<sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchDetail neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_name)">
					AND INSTR(PROD_NAME, #{searchDetail.prod_name}) > 0					
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_lgu)">
					AND PROD_LGU = #{searchDetail.prod_lgu}				
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchDetail.prod_buyer)">
					AND PROD_BUYER = #{searchDetail.prod_buyer}				
				</if>
			</if>
		</trim>
	</sql>
	
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<collection property="memberList" ofType="MemberVO" autoMapping="true"/>
	</resultMap>
	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH CARTVIEW AS (
		    SELECT DISTINCT CART_MEMBER, CART_PROD
		            , MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL
		    FROM CART INNER JOIN MEMBER ON(CART_MEMBER = MEM_ID)
		), PRODVIEW AS(
			SELECT
			    PROD_ID,    PROD_NAME,    PROD_LGU,    PROD_BUYER,
			    PROD_COST,    PROD_PRICE,    PROD_SALE,    PROD_OUTLINE,
			    PROD_DETAIL,    PROD_IMG,    PROD_TOTALSTOCK,    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD'),
			    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY,
			    PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE,    PROD_MILEAGE
			    , LPROD_NM
			    , BUYER_ID, BUYER_NAME, BUYER_CHARGER, BUYER_ADD1
			FROM    PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
					INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		)
		SELECT PRODVIEW.*
			, MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL
		FROM PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prod_id}
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey resultType="string" order="BEFORE" keyProperty="prod_id"> 
			SELECT #{prod_lgu}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0)+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prod_lgu}
		</selectKey>
		INSERT INTO prod (
		    prod_id,    prod_name,    prod_lgu,    prod_buyer,
		    prod_cost,    prod_price,    prod_sale,    prod_outline,
		    prod_detail,    prod_img,    prod_totalstock,    prod_insdate,
		    prod_properstock,    prod_size,    prod_color,    prod_delivery,
		    prod_unit,    prod_qtyin,    prod_qtysale,    prod_mileage
		) VALUES (
		    #{prod_id,jdbcType=VARCHAR},    #{prod_name,jdbcType=VARCHAR},    
		    #{prod_lgu,jdbcType=VARCHAR},    #{prod_buyer,jdbcType=VARCHAR},
		    #{prod_cost,jdbcType=NUMERIC},    #{prod_price,jdbcType=NUMERIC},    
		    #{prod_sale,jdbcType=NUMERIC},    #{prod_outline,jdbcType=VARCHAR},
		    #{prod_detail,jdbcType=VARCHAR},    #{prod_img,jdbcType=VARCHAR},    
		    #{prod_totalstock,jdbcType=NUMERIC},    SYSDATE,
		    #{prod_properstock,jdbcType=NUMERIC},    #{prod_size,jdbcType=VARCHAR},    
		    #{prod_color,jdbcType=VARCHAR},    #{prod_delivery,jdbcType=VARCHAR},
		    #{prod_unit,jdbcType=VARCHAR},    #{prod_qtyin,jdbcType=NUMERIC},    
		    #{prod_qtysale,jdbcType=NUMERIC},  #{prod_mileage,jdbcType=NUMERIC}
		)
	</insert>
	
	<select id="selectProdCount" parameterType="PagingVO" resultType="int" >
		SELECT COUNT(*)
		FROM PROD
		<include refid="searchFrag" />
	</select>
	
	<resultMap type="ProdVO" id="prodListMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
	</resultMap>
	<select id="selectProdList" parameterType="PagingVO" resultMap="prodListMap">
		WITH PRODVIEW AS (
			SELECT
			  PROD_ID, PROD_NAME, PROD_COST, PROD_PRICE, PROD_BUYER, PROD_LGU
		      , PROD_SALE, PROD_OUTLINE, PROD_MILEAGE  
              , LPROD_NM
			FROM  PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
		)
        SELECT A.*
		FROM(
	        SELECT ROWNUM RNUM, PRODVIEW.*
			    ,BUYER_ID,    BUYER_NAME,    BUYER_LGU,    BUYER_BANK,
				    BUYER_BANKNO,    BUYER_BANKNAME,    BUYER_ZIP,    BUYER_ADD1,
				    BUYER_ADD2,    BUYER_COMTEL,    BUYER_FAX,    BUYER_MAIL,
				    BUYER_CHARGER,    BUYER_TELEXT 
			FROM PRODVIEW LEFT OUTER JOIN BUYER ON (BUYER_ID = PROD_BUYER)
			<include refid="searchFrag" />
        )A
	    <![CDATA[
	    	WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	    ]]>
	    
	</select>
</mapper>









